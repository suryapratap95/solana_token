import BaseSolanaToken from './token.js';
import BaseSPLToken from './spl.js';
export class SolanaToken extends BaseSolanaToken {
    constructor(config) {
        super({
            name: 'solana',
            ticker: 'SOL',
            ...config,
            providerUrl: config.providerUrl ?? 'https://api.mainnet-beta.solana.com/',
        });
    }
}
function getBoundSolana({ name, ticker, providerUrl, }) {
    return class SolanaToken extends BaseSolanaToken {
        constructor(config) {
            super({
                name,
                ticker,
                ...config,
                providerUrl: config.providerUrl ?? providerUrl,
            });
        }
    };
}
// export function SolanaBundlerIrys(opts?:  { finality?: Finality; disablePriorityFees?: boolean } ) {
//     // return a builder
//     return new Builder(SolanaToken).withTokenOptions(opts)
// }
// export default SolanaBundlerIrys
// export function EclipseBundlerIrys(opts?:  { finality?: Finality; disablePriorityFees?: boolean } ) {
//     return new Builder(getBoundSolana({name: "eclipse", ticker: "ETH", providerUrl:  "https://mainnetbeta-rpc.eclipse.xyz"}))
//     .withTokenOptions(opts)
// }
export const Solana = SolanaToken;
export default Solana;
export const EclipseEth = getBoundSolana({
    name: 'eclipse-eth',
    ticker: 'ETH',
    providerUrl: 'https://mainnetbeta-rpc.eclipse.xyz',
});
function getBoundSPL({ name, ticker, providerUrl, contractAddress, }) {
    return class SPLToken extends BaseSPLToken {
        constructor(config) {
            super({
                name,
                ticker,
                ...config,
                providerUrl: config.providerUrl ?? providerUrl,
                contractAddress: config?.opts?.contractAddress ?? contractAddress,
            });
        }
    };
}
export const USDCSolana = getBoundSPL({
    name: 'usdc-solana',
    ticker: 'USDC',
    providerUrl: 'https://api.mainnet-beta.solana.com/',
    contractAddress: 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v',
});
//# sourceMappingURL=solana.js.map